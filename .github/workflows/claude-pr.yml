name: Claude PR Assistant

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

jobs:
  claude-pr:
    if: |
      (github.event_name == 'issue_comment' && 
       contains(github.event.comment.body, '@claude') && 
       github.event.issue.pull_request) ||
      (github.event_name == 'pull_request_review_comment' && 
       contains(github.event.comment.body, '@claude'))
    
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
      issues: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Get PR details
        id: pr-details
        run: |
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            PR_NUMBER="${{ github.event.issue.number }}"
          else
            PR_NUMBER="${{ github.event.pull_request.number }}"
          fi
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          
          # Fetch PR information
          gh pr checkout $PR_NUMBER
          PR_BRANCH=$(gh pr view $PR_NUMBER --json headRefName -q .headRefName)
          echo "pr_branch=$PR_BRANCH" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract Claude command
        id: extract-command
        run: |
          COMMENT_BODY="${{ github.event.comment.body }}"
          # Extract everything after @claude mention
          CLAUDE_COMMAND=$(echo "$COMMENT_BODY" | sed -n 's/.*@claude\s*\(.*\)/\1/p')
          echo "command=$CLAUDE_COMMAND" >> $GITHUB_OUTPUT
      
      - name: Setup AWS credentials for Bedrock
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Run Claude Code with Bedrock
        id: claude-run
        run: |
          # Create a temporary file for Claude's response
          RESPONSE_FILE=$(mktemp)
          
          # Run claude with the command using Bedrock
          npx @anthropic-ai/claude-code@latest "${{ steps.extract-command.outputs.command }}" > "$RESPONSE_FILE" 2>&1 || true
          
          # Read response
          CLAUDE_RESPONSE=$(cat "$RESPONSE_FILE")
          
          # Save multiline response to output
          echo "response<<EOF" >> $GITHUB_OUTPUT
          echo "$CLAUDE_RESPONSE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          # Clean up
          rm -f "$RESPONSE_FILE"
        env:
          ANTHROPIC_USE_BEDROCK: "true"
          ANTHROPIC_MODEL: "anthropic.claude-3-5-sonnet-20241022-v2:0"
      
      - name: Commit changes if any
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "Claude: Applied changes from comment
            
            Triggered by: @${{ github.event.comment.user.login }}
            Command: ${{ steps.extract-command.outputs.command }}"
            
            git push origin HEAD:${{ steps.pr-details.outputs.pr_branch }}
          fi
      
      - name: Post Claude response as comment
        if: always()
        run: |
          # Create comment body with escaped backticks
          cat > comment.md << 'COMMENT_EOF'
          ## Claude Response
          
          ```
          ${{ steps.claude-run.outputs.response }}
          ```
          
          ---
          *Triggered by @${{ github.event.comment.user.login }}*
          COMMENT_EOF
          
          # Post comment
          gh pr comment ${{ steps.pr-details.outputs.pr_number }} --body-file comment.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}